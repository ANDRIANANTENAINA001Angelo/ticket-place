{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "API documentation for the Ticket Place App",
        "contact": {
            "email": "ticket.place@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://apid.c4m.mg/ticket-place-app/public",
            "description": "Production Server"
        },
        {
            "url": "http://localhost:8000",
            "description": "Local Server"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Loged In user",
                "description": "Connect user",
                "operationId": "bc76a9d52929cab7a147ca7b5c527430",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "user nout found"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "DéConnecter user",
                "operationId": "0ab4e3cf7bc4f7ec81b48f7928c7de7c",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "user nout found"
                    },
                    "400": {
                        "description": "donnée incomplète"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/send-verification-mail": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Email Vérification",
                "description": "Send email verification",
                "operationId": "328c9d0bdc072a7146e58b58652c187f",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset Password",
                "description": "Reset user Password",
                "operationId": "28566bf52aa8f35c19b304b2c2be3829",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "6877a453f843f88c025e2b4fe5f543ea1ce5d823a3bb132605c210d4f0d81d04"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "password",
                                        "example": "****"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun user trouvé"
                    },
                    "400": {
                        "description": "donné incomplet"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send Link reset Password",
                "description": "Send Link reset to Password",
                "operationId": "e6a36e6e48542536284f7f26f6cc4d7f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun user trouvé"
                    },
                    "400": {
                        "description": "donné incomplet"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register User",
                "description": "enregistre user",
                "operationId": "18235ea6963e661c49bf381065779d6a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fname": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lname": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "customer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "donné incomplet"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/verify-email/{id}/{hash}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify Email with token",
                "description": "Verify Email using token",
                "operationId": "9259c8d59d0ff37e9eb7677b82731d49",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/verify-email/{id}/{hash}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify Email no token",
                "description": "Verify Email no token",
                "operationId": "20c2c0d0d4dac7b0c5bb726bc3ee995c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get The user's cart",
                "description": "return user's cart",
                "operationId": "659a9669ea36c97dc1330603eeadc37b",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/cart/add": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add items to cart",
                "description": "Add one or many place event to cart.",
                "operationId": "408de867ef91c8a1c1298be6461a5e3c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "type_place_id": {
                                                    "description": "ID place à ajouter",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "nombre": {
                                                    "description": "Le nombre de places à ajouter",
                                                    "type": "integer",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ajoutés au panier avec succès"
                    },
                    "400": {
                        "description": "Données invalides"
                    },
                    "404": {
                        "description": "Événement non trouvé"
                    }
                }
            }
        },
        "/api/cart/update": {
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update cart",
                "description": "Update one or many place event of cart.",
                "operationId": "e5b1ca74b4593556a933c9443d5fe0f9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "type_place_id": {
                                                    "description": "ID place à modifier",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "nombre": {
                                                    "description": "Le nombre de places à modifier",
                                                    "type": "integer",
                                                    "example": "2"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Modification panier succès"
                    },
                    "400": {
                        "description": "Données invalides"
                    },
                    "401": {
                        "description": "Action non authoriser"
                    },
                    "403": {
                        "description": "Action interdit"
                    },
                    "404": {
                        "description": "Événement non trouvé"
                    }
                }
            }
        },
        "/api/cart/clear": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Clear The user's cart",
                "description": "Remove all item of user's cart",
                "operationId": "c2cf94402630acad1cc6d317ec806693",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/cart/remove/item": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove Item",
                "description": "Remove Item in the user's cart.",
                "operationId": "99c07bf01ac5d6a150c741000a5ae399",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type_place_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "operation succès"
                    },
                    "400": {
                        "description": "Données invalides"
                    },
                    "401": {
                        "description": "Action non authoriser"
                    },
                    "403": {
                        "description": "Action interdit"
                    },
                    "404": {
                        "description": "Type Place non trouvé"
                    }
                }
            }
        },
        "/api/cart/pay": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Pay the cart",
                "description": "Process Cart Payment",
                "operationId": "acf61b071163a06cbdfe6409d21985a7",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "qskj34qsd"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/cart/evaluation": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Evaluation Cart ",
                "description": "Evaluation Cart Before Payment with code promo",
                "operationId": "c03c16a8679ac7a399ede90891bfc364",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "qskj34qsd"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/codes": {
            "get": {
                "tags": [
                    "Codes"
                ],
                "summary": "Get All Info Code",
                "description": "return list of the all code",
                "operationId": "e24402fbc821a5e04a9143d4ad9be1c0",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            },
            "post": {
                "tags": [
                    "Codes"
                ],
                "summary": "Create new code",
                "description": "Create new reduction code",
                "operationId": "95613390943ee050086dc8c3f77af0b9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "qskj34qsd"
                                    },
                                    "price": {
                                        "description": "Pourcentage montant réduction",
                                        "type": "number",
                                        "example": "0.01"
                                    },
                                    "expire_at": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "donné incomplet"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/codes/{code}": {
            "get": {
                "tags": [
                    "Codes"
                ],
                "summary": "Get One Code Info",
                "description": "return the info of the code",
                "operationId": "71dfe81dc982c321b7743fd5c4aa5b53",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "ID of the code to show",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            },
            "put": {
                "tags": [
                    "Codes"
                ],
                "summary": "Update code",
                "description": "Update reduction code",
                "operationId": "7fc6d91d9524cff2a8c6395a36852ff2",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "ID of the code to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "price": {
                                        "description": "Pourcentage prix réduction",
                                        "type": "number",
                                        "example": "0.01"
                                    },
                                    "expire_at": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "donné incomplet"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/generate-code": {
            "post": {
                "tags": [
                    "Codes"
                ],
                "summary": "Generate new random code",
                "description": "Generate new random reduction code",
                "operationId": "6c9692e78f8424afd41df31821fa5316",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get All Events List",
                "description": "return list of the all event Event",
                "operationId": "7058ab7c89d20c752b6afd6d808f6526",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create new Event",
                "description": "Create new Event",
                "operationId": "508895e03d7f10edac84357084c87b20",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "titre": {
                                        "type": "string",
                                        "example": "concert"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "plus de detail sur l'event"
                                    },
                                    "localisation": {
                                        "type": "string",
                                        "example": "Rex Anjoma"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-23"
                                    },
                                    "heure": {
                                        "type": "time",
                                        "example": "19:00"
                                    },
                                    "tag_id": {
                                        "description": "ID tag",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "image": {
                                        "description": "Image associée à l'événement",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "donné incomplet"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/events/{event_id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get One Event Info",
                "description": "return info of the Event",
                "operationId": "f78fefe3df55f27051847d9671fa08f8",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of the Event to show",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Update Event",
                "description": "Update Event info",
                "operationId": "27f366cef360d86539d9d6a0bea212a1",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of the Event to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "titre": {
                                        "type": "string",
                                        "example": "concert"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "plus de detail sur l'event"
                                    },
                                    "localisation": {
                                        "type": "string",
                                        "example": "Rex Anjoma"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-23"
                                    },
                                    "heure": {
                                        "type": "time",
                                        "example": "19:00"
                                    },
                                    "tag_id": {
                                        "description": "ID tag",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "image": {
                                        "description": "Image associée à l'événement",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "donné incomplet"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete event",
                "description": "Delete event",
                "operationId": "279659e863edbef6d1082a03a201715a",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of the event to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action not authorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/search-event": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Search or Filter Events",
                "description": "Search or Filter Events published and not finished",
                "operationId": "18d2c475a7c2734e20371af2f187ab9d",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of the event",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "localisation",
                        "in": "query",
                        "description": "Location of the event",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum Price",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "example": 1
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Max Price",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date of the event (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date of the event (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/events/{event_id}/add-type-place": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Ajouter des types de place à un événement",
                "description": "Permet d'ajouter un ou plusieurs types de place à un événement existant.",
                "operationId": "022ea0765ef2c9d2bef79c6984e15d54",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID de l'événement auquel ajouter des types de place",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type_places": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "nom": {
                                                    "description": "Le nom du type de place",
                                                    "type": "string"
                                                },
                                                "nombre": {
                                                    "description": "Le nombre de places pour ce type",
                                                    "type": "integer"
                                                },
                                                "prix": {
                                                    "description": "Le prix de ce type de place",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Types de place ajoutés avec succès"
                    },
                    "400": {
                        "description": "Données invalides"
                    },
                    "404": {
                        "description": "Événement non trouvé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events/{event_id}/publish": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Publish the event",
                "description": "Publish the Event, to end creation",
                "operationId": "130e913c1ff8712ea6ad59b7fb44477d",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of the Event to show",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/search-event-price": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Search Events by price",
                "description": "Search Events published and not finished by price",
                "operationId": "39d1dabc462d80110b8ad4ec6c6ba651",
                "parameters": [
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Prix Minimum ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "example": 1
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Max Price",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/search-event-text": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Search Events by text",
                "description": "Search Events published and not finished by text content",
                "operationId": "49e26bb9245d058d20dfcba6bd6c932a",
                "parameters": [
                    {
                        "name": "text",
                        "in": "query",
                        "description": "Text of the event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get All Tags List",
                "description": "return list of the all event tag",
                "operationId": "4d0f4baf9e6fa992c0d85fbf140ebf17",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "Create new Tag",
                "description": "Create new Tag",
                "operationId": "a0a246f29dcb119a2189fd230fc10028",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "label": {
                                        "type": "string",
                                        "example": "concert"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "donné incomplet"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/tags/{tag_id}": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get One Tag Info",
                "description": "return info of the tag",
                "operationId": "17cf4f4a882aae3d887866484660df56",
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "description": "ID of the tag to show",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tags"
                ],
                "summary": "Update Tag",
                "description": "Update Tag label",
                "operationId": "3a64462cc7467aedc95b80bf19a299de",
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "description": "ID of the tag to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "label": {
                                        "type": "string",
                                        "example": "bal masqué"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "donné incomplet"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tags"
                ],
                "summary": "Delete tag",
                "description": "Delete tag",
                "operationId": "d24105e20ffcde076b873eaec69e2965",
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "description": "ID of the tag to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action not authorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/my-tickets": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user's tickets",
                "description": "return the list of user's tickets",
                "operationId": "7cb72bb0c912d3f203b9c01811317ff9",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/events/{event_id}/tickets": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get Event's Tickets",
                "description": "return list of Event's tickets",
                "operationId": "2538e567322eb94714ad69baffae7ee9",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of the Event",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/event-type-place": {
            "get": {
                "tags": [
                    "TypePlaces"
                ],
                "summary": "Get All Type place of events",
                "description": "return list of the all Type place of events",
                "operationId": "c7d7bba829a0ab513ac5e97d0ecb60ea",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/event-type-place/{type_place_id}": {
            "get": {
                "tags": [
                    "TypePlaces"
                ],
                "summary": "Show the type place ",
                "description": "Show type place and his event",
                "operationId": "8ec9ac599efadaefb0224ff9e624dcb6",
                "parameters": [
                    {
                        "name": "type_place_id",
                        "in": "path",
                        "description": "ID du types de place",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "opération succès"
                    },
                    "404": {
                        "description": "Type Place non trouvé"
                    },
                    "500": {
                        "description": "server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "TypePlaces"
                ],
                "summary": "Update type place ",
                "description": "Update type place info of a event",
                "operationId": "08893c5c18a192fe61135a9cebfc115b",
                "parameters": [
                    {
                        "name": "type_event_id",
                        "in": "path",
                        "description": "ID du types de place",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nom": {
                                        "description": "Le nom du type de place",
                                        "type": "string"
                                    },
                                    "nombre": {
                                        "description": "Le nombre de places pour ce type",
                                        "type": "integer"
                                    },
                                    "prix": {
                                        "description": "Le prix de ce type de place",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Types de place ajoutés avec succès"
                    },
                    "400": {
                        "description": "Données invalides"
                    },
                    "404": {
                        "description": "Événement non trouvé"
                    }
                }
            }
        },
        "/api/event-type-place/{type_event_id}": {
            "delete": {
                "tags": [
                    "TypePlaces"
                ],
                "summary": "Delete type place event",
                "description": "Delete type place event",
                "operationId": "ff5d324fe65349731aa49d8c1bd7f790",
                "parameters": [
                    {
                        "name": "type_event_id",
                        "in": "path",
                        "description": "ID of the event to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action not authorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "500": {
                        "description": "erreur serveur"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get List of users",
                "description": "return list of all users",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    }
                }
            }
        },
        "/api/users/{user_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get One User",
                "description": "return the users",
                "operationId": "e10f96743f349605ddec7dd8f1a09324",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to show",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun user trouvé"
                    },
                    "500": {
                        "description": "erreur interne serveur"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update one user",
                "description": "update information of one user",
                "operationId": "c64f78766f4915182147dd62bcc1e3f3",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fname": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lname": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0345992047"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "administrator"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun user trouvé"
                    },
                    "400": {
                        "description": "donné incomplet"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete one user",
                "description": "Delete the user",
                "operationId": "8813fccf55a87ec7b1237ecdee00419f",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "404": {
                        "description": "aucun user trouvé"
                    },
                    "500": {
                        "description": "Erreur interne serveur"
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get profile info",
                "description": "return the current user info",
                "operationId": "4373251f8140344279ac32a1ac817cef",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "403": {
                        "description": "action forbiden"
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                }
            }
        },
        "/api/my-notifications": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get notifications",
                "description": "return the user's notifications",
                "operationId": "b179ebcb1cb36e75e1defa6a7c262ce5",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "aucun résultat trouvé"
                    },
                    "401": {
                        "description": "action unauthorized"
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Codes",
            "description": "Codes"
        },
        {
            "name": "Events",
            "description": "Events"
        },
        {
            "name": "Tags",
            "description": "Tags"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "TypePlaces",
            "description": "TypePlaces"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}